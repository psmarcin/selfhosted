version: "2.4"
services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    environment:
      WATCHTOWER_POLL_INTERVAL: 604800
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_RUN_ONCE: ${WATCHTOWER_RUN_ONCE:-false}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    container_name: redis
    image: redis:6.0
    networks:
      - utilites
    restart: unless-stopped
    mem_limit: 50m
    mem_reservation: 25m

  postgres:
    container_name: postgres
    image: postgres:14
    networks:
      - utilites
    restart: unless-stopped
    volumes:
      - utils_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    labels:
      - docker-volume-backup.stop-during-backup=true
    mem_limit: 256m
    mem_reservation: 50m

  backup:
    image: offen/docker-volume-backup:v2
    restart: always
    environment:
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.{{ .Extension }}
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: '7'
      BACKUP_CRON_EXPRESSION: '0 11 * * *'
    volumes:
      - utils_pgdata:/backup/utils_pgdata:ro
      - pl_data:/backup/pl_data:ro
      - pl_media:/backup/pl_media:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKER_DIR:-./}/backup/archive:/archive

volumes:
  utils_pgdata:
    name: utils_pgdata
    external: true
  pl_data:
    name: paperless_pl_data
    external: true
  pl_media:
    name: paperless_pl_media
    external: true

networks:
  utilites:
    name: utilites
    external: true