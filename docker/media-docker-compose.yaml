version: "2.4"
services:
  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    networks:
      - media
      - proxy
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Warsaw
    volumes:
      - ${DOCKER_DIR:-./}/jackett/config:/config
      - ${DOCKER_DIR:-./}/jackett/downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - traefik.http.routers.jackett.rule=Host(`jackett.local.psmarcin.dev`)
      - traefik.http.routers.jackett.tls.certresolver=localresolver
      - traefik.http.routers.jackett.tls=true
      - traefik.docker.network=proxy
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    networks:
      - media
      - proxy
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Warsaw
    volumes:
      - ${DOCKER_DIR:-./}/sonarr/config:/config
      - ${FILES_DIR:-./}/downloads:/downloads
      - ${FILES_DIR:-./}/downloads/tv:/tv
    depends_on:
      - jackett
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.rule=Host(`tv.local.psmarcin.dev`)
      - traefik.http.routers.sonarr.tls.certresolver=localresolver
      - traefik.http.routers.sonarr.tls=true
      - traefik.docker.network=proxy
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    networks:
      - media
      - proxy
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Warsaw
    volumes:
      - ${DOCKER_DIR:-./}/radarr/config:/config
      - ${FILES_DIR:-./}/downloads:/downloads
      - ${FILES_DIR:-./}/downloads/movies:/movies
    depends_on:
      - jackett
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.rule=Host(`movie.local.psmarcin.dev`)
      - traefik.http.routers.radarr.tls.certresolver=localresolver
      - traefik.http.routers.radarr.tls=true
      - traefik.docker.network=proxy

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    networks:
      - media
      - proxy
    environment:
      - TZ=Europe/Warsaw
      - PORT=5055 #optional
    volumes:
      - ${DOCKER_DIR:-./}/jellyseerr/config:/app/config
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
    dns:
      - 208.67.222.222
      - 1.1.1.1
      - 8.8.8.8
    labels:
      - traefik.enable=true
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - traefik.http.routers.jellyseerr.rule=Host(`v.local.psmarcin.dev`)
      - traefik.http.routers.jellyseerr.tls.certresolver=localresolver
      - traefik.http.routers.jellyseerr.tls=true
      - traefik.docker.network=proxy

  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    networks:
      - media
      - proxy
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/Warsaw
    volumes:
      - ${DOCKER_DIR:-./}/bazarr/config:/config
      - ${FILES_DIR:-./}/downloads/movies:/movies
      - ${FILES_DIR:-./}/downloads/tv:/tv
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.rule=Host(`subtitle.local.psmarcin.dev`)
      - traefik.http.routers.bazarr.tls.certresolver=localresolver
      - traefik.http.routers.bazarr.tls=true
      - traefik.docker.network=proxy
networks:
  media:
    name: media
  proxy:
    name: proxy
    external: true
